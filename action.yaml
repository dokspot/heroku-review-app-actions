name: "Manage Heroku Review Apps"
description: Use Heroku API to replicate the review app integration
author: Peter Mbanugo (@pmbanugo - GitHub)
inputs:
  app-name-prefix:
    description: "Prefix for the app. This is can be the name of the pipeline e.g vercel prefix will produce vercel-pr-PR_NUMBER.herokuapp.com"
    required: false
    default: ""
  api-key:
    description: "Your Heroku API key"
    required: true
  pipeline-id:
    description: "The id of the pipeline to deploy review app for"
    required: true
outputs:
  url:
    description: "The URL for the app"
    value: ${{ steps.output-url.outputs.url }}
branding:
  icon: "play-circle"
  color: "purple"
runs:
  using: "composite"
  steps:
    - name: Generate app name
      shell: bash
      env:
        APP_PREFIX: ${{ inputs.app-name-prefix }}
      run: |
        #!/bin/bash

        if [[ $APP_PREFIX == '' ]]; then
        echo "using default prefix"
        echo "APP_NAME=review-actions-pr-${{ github.event.number }}" >> $GITHUB_ENV
        else
        echo "using app prefix"
        echo "APP_NAME=${{ inputs.app-name-prefix }}-pr-${{ github.event.number }}" >> $GITHUB_ENV
        fi
    - name: Create Source Endpoint
      if: ${{ github.event_name == 'pull_request' && github.event.action != 'closed' }}
      id: source_endpoint
      shell: bash
      run: |
        str=$(curl -X POST https://api.heroku.com/sources \
          -H "Content-Type: application/json" \
          -H "Accept: application/vnd.heroku+json; version=3" \
          -H "Authorization: Bearer ${{ inputs.api-key }}")
        echo $str
        jso=$(echo $str | jq -r '{get: .source_blob.get_url, put: .source_blob.put_url}')
        echo $jso
        echo ::set-output name=SOURCE_ENDPOINT::$jso
        echo ${{ toJSON(steps.source_endpoint.outputs.SOURCE_ENDPOINT) }}
    - name: Compress Source Code
      if: ${{ github.event_name == 'pull_request' && github.event.action != 'closed' }}
      shell: bash
      run: |
        tar -czvf source.tar.gz *
    - name: Upload Source Code
      if: ${{ github.event_name == 'pull_request' && github.event.action != 'closed' }}
      shell: bash
      run: |
        export URL=$(echo ${{ toJSON(steps.source_endpoint.outputs.SOURCE_ENDPOINT) }} | jq -r '.put')
        curl $URL -X PUT -H 'Content-Type:' --data-binary @source.tar.gz
    - name: Create Review App
      shell: bash
      run: |
        export SOURCE_GET_URL=$(echo ${{ toJSON(steps.source_endpoint.outputs.SOURCE_ENDPOINT) }} | jq -r '.get')
        curl -n -X POST https://api.heroku.com/review-apps \
          -d '{
            "branch": "${{ github.ref_name }}",
            "pipeline": "${{ inputs.pipeline-id }}",
            "source_blob": {"url": "'"$SOURCE_GET_URL"'", "version": "'"${{ github.event.pull_request.head.sha }}"'"},
          }'
          -H "Content-Type: application/json" \
          -H "Accept: application/vnd.heroku+json; version=3" \
          -H "Authorization: Bearer ${{ inputs.api-key }}" | \
